name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Create test environment file
      run: |
        cp .env.example .env
        echo "SECRET_KEY_BASE=$(openssl rand -base64 48)" >> .env
    
    - name: Start services
      run: |
        docker-compose up -d
        sleep 15
    
    - name: Run tests
      run: |
        docker-compose exec -T app mix test
    
    - name: Check compilation warnings
      run: |
        docker-compose exec -T app mix compile --warnings-as-errors
    
    - name: Run code analysis
      run: |
        docker-compose exec -T app mix format --check-formatted
        docker-compose exec -T app mix credo
    
    - name: Stop services
      run: docker-compose down

  build-production:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Create production environment file
      run: |
        cp .env.example .env
        echo "SECRET_KEY_BASE=$(openssl rand -base64 48)" >> .env
        echo "DATABASE_URL=ecto://postgres:postgres@postgres:5432/app_prod" >> .env
    
    - name: Build production image
      run: |
        docker build -f app/Dockerfile -t fireapp:prod --target runtime app/
    
    - name: Test production build starts
      run: |
        docker run --rm fireapp:prod ./bin/app version